---

# UFW
# ===

- name: Install UFW
  package: name=ufw state=latest

- ufw: state=reset
- ufw: state=enabled
- ufw: logging=on

- name: Set default incoming policy
  ufw: direction=in policy=reject

- ufw: rule=limit port=ssh proto=tcp log=yes

- name: Pings from the LAN
  ufw: rule=allow proto=icmp from_ip=192.168.0.0/16
  when: "{{ ansible_default_ipv4.address|ipaddr('192.168.0.0/16') }}"

# Allow localhost stuff
- ufw: from_ip=localhost to_ip=localhost rule=allow


# - name: Create /etc/iptables folder
#   file:
#     dest: /etc/iptables
#     state: directory
#     owner: root

# - name: Copy across iptables.rules
#   template: 
#     src: "{{ role_path }}/templates/iptables.rules"
#     dest: /etc/iptables/iptables.rules 
#     owner: root
#     mode: "u=rw,og=r"
#   notify: 
#     - reload iptables

# - name: Reload iptables manually if service reload fails
#   shell: iptables-restore < /etc/iptables/iptables.rules
#   when: ansible_distribution == 'Ubuntu'

# - name: Make sure iptables is loaded on boot for ubuntu
#   cron:
#     name: load iptables
#     job: "iptables-restore < /etc/iptables/iptables.rules"
#     user: root
#     special_time: reboot
#     state: present
#   when: ansible_distribution == 'Ubuntu'


# Fail2Ban
# ========

- name: Install fail2ban
  package: name=fail2ban state=latest

- name: Copy across jail.local
  template:
    src: "{{ role_path }}/templates/jail.local"
    dest: /etc/fail2ban/jail.local
    owner: root
    group: root
    mode: "u=rw"

- name: Restart fail2ban
  service:
    name: fail2ban
    state: restarted
    enabled: true


# Lock Down SSH
# =============

- name: Disallow password authentication
  lineinfile: dest=/etc/ssh/sshd_config
              regexp="^PasswordAuthentication"
              line="PasswordAuthentication no"
              state=present
  notify: restart ssh

- name: Disallow root SSH access
  lineinfile: dest=/etc/ssh/sshd_config
              regexp="^PermitRootLogin"
              line="PermitRootLogin no"
              state=present
  notify: restart ssh

